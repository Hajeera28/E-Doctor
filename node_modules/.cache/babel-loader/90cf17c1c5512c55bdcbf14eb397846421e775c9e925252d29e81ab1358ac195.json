{"ast":null,"code":"var _jsxFileName = \"C:\\\\HAJU\\\\E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hi! How can I assist you today? Please select an option below.'\n  }]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  // Predefined Questions and Answers\n  const questionsAndAnswers = {\n    login: [{\n      question: 'How do I log in?',\n      answer: 'Use your registered email and password to log in on the login page.'\n    }, {\n      question: 'What if I forget my password?',\n      answer: 'Click on the \"Forgot Password\" link on the login page and follow the instructions.'\n    }, {\n      question: 'Can I stay logged in?',\n      answer: 'Yes, you can enable the \"Remember Me\" option during login to stay logged in on the device.'\n    }, {\n      question: 'What do I do if my login is not working?',\n      answer: 'Make sure your credentialsare correct or reset your password if necessary.'\n    }, {\n      question: 'How can I log out?',\n      answer: 'You can log out by clicking the \"Logout\" button in your account settings.'\n    }, {\n      question: 'Can I use social media to log in?',\n      answer: 'Yes, we offer options to log in using Facebook, Google, and other social media accounts.'\n    }, {\n      question: 'Why am I being redirected to the login page?',\n      answer: 'You may have been logged out due to inactivity or a session timeout.'\n    }, {\n      question: 'Can I log in with a mobile number?',\n      answer: 'Currently, login is supported via email and password only.'\n    }],\n    register: [{\n      question: 'How do I register?',\n      answer: 'To register, visit the registration page and fill in your details.'\n    }, {\n      question: 'What do I need to register?',\n      answer: 'You will need your name, email, phone number, and password to complete registration.'\n    }, {\n      question: 'Can I register without an email?',\n      answer: 'An email address is required for registration to receive confirmation and notifications.'\n    }, {\n      question: 'What should I do if I have issues registering?',\n      answer: 'Please check if your details are correct or contact support for assistance.'\n    }, {\n      question: 'Can I register using my social media account?',\n      answer: 'Yes, you can register using Facebook, Google, or other social media accounts.'\n    }, {\n      question: 'Is registration free?',\n      answer: 'Yes, registration is completely free.'\n    }, {\n      question: 'Do I need a referral to register?',\n      answer: 'No, referrals are not required for registration.'\n    }, {\n      question: 'How do I update my registration details?',\n      answer: 'You can update your details through your profile page after logging in.'\n    }],\n    appointment: [{\n      question: 'How do I book an appointment?',\n      answer: 'Log in to your account, select a doctor, and book an available slot.'\n    }, {\n      question: 'Can I change my appointment?',\n      answer: 'Yes, you can reschedule your appointment by logging into your account.'\n    }, {\n      question: 'Can I cancel my appointment?',\n      answer: 'Yes, you can cancel your appointment from the appointments section.'\n    }, {\n      question: 'What if I miss my appointment?',\n      answer: 'Please reschedule as soon as possible to avoid any inconvenience.'\n    }, {\n      question: 'How can I choose a doctor?',\n      answer: 'Browse through the list of doctors by specialty and select the one that suits your needs.'\n    }, {\n      question: 'Can I book multiple appointments?',\n      answer: 'Yes, you can book multiple appointments with different doctors.'\n    }, {\n      question: 'What should I do if the doctor is unavailable?',\n      answer: 'You can select an alternative time slot or book with another doctor.'\n    }, {\n      question: 'Do I need to pay for the appointment upfront?',\n      answer: 'Payment may be required during the booking process, depending on the doctor or service.'\n    }],\n    password: [{\n      question: 'How do I reset my password?',\n      answer: 'Click on the \"Forgot Password\" link on the login page and follow the instructions.'\n    }, {\n      question: 'What should I do if I still can’t reset my password?',\n      answer: 'Contact customer support for further assistance.'\n    }, {\n      question: 'How long will it take to reset my password?',\n      answer: 'You should receive a password reset email within a few minutes.'\n    }, {\n      question: 'Can I reset my password without an email?',\n      answer: 'Password reset requires access to the email account used during registration.'\n    }, {\n      question: 'Can I change my password from the account settings?',\n      answer: 'Yes, you can change your password anytime from the settings page after logging in.'\n    }, {\n      question: 'What if I don’t receive the reset email?',\n      answer: 'Check your spam folder or ensure you entered the correct email address.'\n    }, {\n      question: 'Can I use the same password after resetting it?',\n      answer: 'Yes, you can choose to set the same password after resetting.'\n    }, {\n      question: 'Can I reset my password using my phone number?',\n      answer: 'Currently, password reset is only available via email.'\n    }]\n  };\n  // Toggle chatbot visibility\n  const toggleChatbot = () => setIsOpen(!isOpen);\n  // Handle question selection\n  const handleQuestionClick = qa => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: qa.question\n    }, {\n      sender: 'bot',\n      text: qa.answer\n    }]);\n  };\n  // Set the selected option (login, register, etc.)\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: `I want to know about ${option}.`\n    }, {\n      sender: 'bot',\n      text: `Here are some questions about ${option}:`\n    }]);\n  };\n  // Handle \"Back\" option to go back to main menu\n  const handleBack = () => {\n    setSelectedOption(null);\n    setMessages(prev => [...prev, {\n      sender: 'bot',\n      text: 'Please select an option below.'\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-trigger\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-chatbot-btn\",\n        onClick: toggleChatbot,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chatbot-label\",\n        children: \"Chat with Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [\"Chat with Us\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleChatbot,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-footer\",\n        children: [selectedOption && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 1\n        }, this), !selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-option-btn\",\n            onClick: () => handleOptionSelect('login'),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-option-btn\",\n            onClick: () => handleOptionSelect('register'),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-option-btn\",\n            onClick: () => handleOptionSelect('appointment'),\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-option-btn\",\n            onClick: () => handleOptionSelect('password'),\n            children: \"Password Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 1\n        }, this), selectedOption && questionsAndAnswers[selectedOption].map((qa, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-question-btn\",\n          onClick: () => handleQuestionClick(qa),\n          children: qa.question\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 1\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Chatbot, \"+E5LZF04sk5fHTwm/3fsGYQAgeM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","sender","text","selectedOption","setSelectedOption","questionsAndAnswers","login","question","answer","register","appointment","password","toggleChatbot","handleQuestionClick","qa","prev","handleOptionSelect","option","handleBack","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","_c","$RefreshReg$"],"sources":["C:/HAJU/E-doctor/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\nfunction Chatbot() {\r\nconst [isOpen, setIsOpen] = useState(false);\r\nconst [messages, setMessages] = useState([\r\n{ sender: 'bot', text: 'Hi! How can I assist you today? Please select an option below.' },\r\n]);\r\nconst [selectedOption, setSelectedOption] = useState(null);\r\n// Predefined Questions and Answers\r\nconst questionsAndAnswers = {\r\nlogin: [    { question: 'How do I log in?', answer: 'Use your registered email and password to log in on the login page.' },\r\n { question: 'What if I forget my password?', answer: 'Click on the \"Forgot Password\" link on the login page and follow the instructions.' },\r\n{ question: 'Can I stay logged in?', answer: 'Yes, you can enable the \"Remember Me\" option during login to stay logged in on the device.' },\r\n{ question: 'What do I do if my login is not working?', answer: 'Make sure your credentialsare correct or reset your password if necessary.' },\r\n{ question: 'How can I log out?', answer: 'You can log out by clicking the \"Logout\" button in your account settings.' },\r\n{ question: 'Can I use social media to log in?', answer: 'Yes, we offer options to log in using Facebook, Google, and other social media accounts.' },\r\n{ question: 'Why am I being redirected to the login page?', answer: 'You may have been logged out due to inactivity or a session timeout.' },\r\n{ question: 'Can I log in with a mobile number?', answer: 'Currently, login is supported via email and password only.' },\r\n],\r\nregister: [\r\n{ question: 'How do I register?', answer: 'To register, visit the registration page and fill in your details.' },\r\n{ question: 'What do I need to register?', answer: 'You will need your name, email, phone number, and password to complete registration.' },\r\n{ question: 'Can I register without an email?', answer: 'An email address is required for registration to receive confirmation and notifications.' },\r\n{ question: 'What should I do if I have issues registering?', answer: 'Please check if your details are correct or contact support for assistance.' },\r\n{ question: 'Can I register using my social media account?', answer: 'Yes, you can register using Facebook, Google, or other social media accounts.' },\r\n{ question: 'Is registration free?', answer: 'Yes, registration is completely free.' },\r\n{ question: 'Do I need a referral to register?', answer: 'No, referrals are not required for registration.' },\r\n{ question: 'How do I update my registration details?', answer: 'You can update your details through your profile page after logging in.' },\r\n],\r\nappointment: [\r\n{ question: 'How do I book an appointment?', answer: 'Log in to your account, select a doctor, and book an available slot.' },\r\n{ question: 'Can I change my appointment?', answer: 'Yes, you can reschedule your appointment by logging into your account.' },\r\n{ question: 'Can I cancel my appointment?', answer: 'Yes, you can cancel your appointment from the appointments section.' },\r\n{ question: 'What if I miss my appointment?', answer: 'Please reschedule as soon as possible to avoid any inconvenience.' },\r\n{ question: 'How can I choose a doctor?', answer: 'Browse through the list of doctors by specialty and select the one that suits your needs.' },\r\n{ question: 'Can I book multiple appointments?', answer: 'Yes, you can book multiple appointments with different doctors.' },\r\n{ question: 'What should I do if the doctor is unavailable?', answer: 'You can select an alternative time slot or book with another doctor.' },\r\n{ question: 'Do I need to pay for the appointment upfront?', answer: 'Payment may be required during the booking process, depending on the doctor or service.' },\r\n],\r\npassword: [\r\n{ question: 'How do I reset my password?', answer: 'Click on the \"Forgot Password\" link on the login page and follow the instructions.' },\r\n{ question: 'What should I do if I still can’t reset my password?', answer: 'Contact customer support for further assistance.' },\r\n{ question: 'How long will it take to reset my password?', answer: 'You should receive a password reset email within a few minutes.' },\r\n{ question: 'Can I reset my password without an email?', answer: 'Password reset requires access to the email account used during registration.' },\r\n{ question: 'Can I change my password from the account settings?', answer: 'Yes, you can change your password anytime from the settings page after logging in.' },\r\n{ question: 'What if I don’t receive the reset email?', answer: 'Check your spam folder or ensure you entered the correct email address.' },\r\n{ question: 'Can I use the same password after resetting it?', answer: 'Yes, you can choose to set the same password after resetting.' },\r\n{ question: 'Can I reset my password using my phone number?', answer: 'Currently, password reset is only available via email.' },\r\n],\r\n};\r\n// Toggle chatbot visibility\r\nconst toggleChatbot = () => setIsOpen(!isOpen);\r\n// Handle question selection\r\nconst handleQuestionClick = (qa) => {\r\nsetMessages((prev) => [\r\n...prev,\r\n{ sender: 'user', text: qa.question },\r\n{ sender: 'bot', text: qa.answer },\r\n]);\r\n};\r\n// Set the selected option (login, register, etc.)\r\nconst handleOptionSelect = (option) => {\r\nsetSelectedOption(option);\r\nsetMessages((prev) => [\r\n...prev,\r\n{ sender: 'user', text: `I want to know about ${option}.` },\r\n{ sender: 'bot', text: `Here are some questions about ${option}:` },\r\n]);\r\n};\r\n// Handle \"Back\" option to go back to main menu\r\nconst handleBack = () => {\r\nsetSelectedOption(null);\r\nsetMessages((prev) => [\r\n...prev,\r\n{ sender: 'bot', text: 'Please select an option below.' },\r\n]);\r\n};\r\nreturn (\r\n<>\r\n{/* Chatbot Trigger */}\r\n<div className=\"chatbot-trigger\">\r\n<button className=\"open-chatbot-btn\" onClick={toggleChatbot}>\r\n<i className=\"fas fa-comments\"></i>\r\n</button>\r\n<p className=\"chatbot-label\">Chat with Us</p>\r\n</div>\r\n{/* Chatbot Container */}\r\n{isOpen && (\r\n<div className=\"chatbot-container\">\r\n<div className=\"chatbot-header\">\r\nChat with Us\r\n<span onClick={toggleChatbot}>X</span>\r\n</div>\r\n<div className=\"chatbot-body\">\r\n{messages.map((msg, i) => (\r\n<div key={i} className={`chatbot-message ${msg.sender === 'bot' ? 'bot-message' : \r\n'user-message'}`}>\r\n{msg.text}\r\n</div>\r\n))}\r\n</div>\r\n<div className=\"chatbot-footer\">\r\n{/* Back button */}\r\n{selectedOption && (\r\n<button className=\"back-btn\" onClick={handleBack}>Back</button>\r\n)}\r\n{/* Display option buttons */}\r\n{!selectedOption && (\r\n<div className=\"options\">\r\n<button className=\"chatbot-option-btn\" onClick={() => \r\nhandleOptionSelect('login')}>Login</button>\r\n<button className=\"chatbot-option-btn\" onClick={() => \r\nhandleOptionSelect('register')}>Register</button>\r\n<button className=\"chatbot-option-btn\" onClick={() => \r\nhandleOptionSelect('appointment')}>Book Appointment</button>\r\n<button className=\"chatbot-option-btn\" onClick={() => \r\nhandleOptionSelect('password')}>Password Reset</button>\r\n</div>\r\n)}\r\n{/* Display relevant questions based on selected option */}\r\n{selectedOption && questionsAndAnswers[selectedOption].map((qa, i) => (\r\n<button\r\nkey={i}\r\nclassName=\"chatbot-question-btn\"\r\nonClick={() => handleQuestionClick(qa)}\r\n>\r\n{qa.question}\r\n</button>\r\n))}\r\n</div>\r\n</div>\r\n)}\r\n</>\r\n);\r\n}\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}